#!/usr/bin/env node
'use strict';

try {
  require('source-map-support').install();
} catch (err) {
  if (err.code !== 'MODULE_NOT_FOUND') throw err;
}

const packages = [];
for (const dep of ['@pkmn/sim', '@pkmn/data']) {
  try {
    require.resolve(dep);
  } catch (err) {
    if (err.code !== 'MODULE_NOT_FOUND') throw err;
    packages.push(dep);
  }
}
if (packages.length) {
  require('child_process').execSync(`npm install ${packages.join(' ')} --no-audit --no-save`, {
    stdio: 'inherit',
    cwd: __dirname,
  });
  console.error('Please rerun now that dependencies have been resolved.');
  process.exit(1);
}

const readline = require('readline');

const {Generation} = require('@pkmn/data');
const {Dex} = require('@pkmn/sim');

const {Verifier} = require('./build/verifier');

const verifier = new Verifier(
  Generation.get(Dex, process.argv[2] || 9, Verifier.EXISTS),
  process.argv[3] === 'raw'
);

readline.createInterface({
  input: process.stdin,
  output: process.stdout,
  terminal: false,
}).on('line', line => {
  const result = verifier.verifyLine(line);
  if (result) {
    console.error(result);
    process.exit(1);
  }
});
